#include <iostream>
#include <fstream>
#include <stdio.h>
using namespace std;

//Iterative version
int iterbin(int list[], int n, int left, int right) {
	int middle;
	while (left <= right) {
		middle = (left + right) / 2;
		if (n > list[middle]) {
			left = middle + 1;
		}
		else if (n == list[middle]) {
			return middle;
		}
		else {
			right = middle - 1;
		}
	}
}

//Recursive version
int recurbin(int list[], int n, int left, int right) {
	int middle = (left + right) / 2;
	if (n > list[middle]) {
		return recurbin(list, n, middle + 1, right);
	}
	else if (n == list[middle]) {
		return middle;
	}
	else {
		return recurbin(list, n, left, middle - 1);
	}
}


int main() {
	int list[] = { 10, 20, 30, 40, 50, 60, 70, 80, 90, 100 };
	printf("Enter an integer to search: ");
	int searchnum;
	int method;
	int found = 0;
	scanf("%d", &searchnum);
	for (int i = 0; i < 10; i++) {
		if (searchnum == list[i]) {
			found++;
			printf("Enter method of search: (1. Binary Search  2. Recursive binary search): ");
			scanf("%d", &method);
			if (method == 1) {
				printf("%d is at position %d.\n", searchnum, iterbin(list, searchnum, 0, 9));
			}
			else if (method == 2) {
				printf("%d is at position %d\n", searchnum, recurbin(list, searchnum, 0, 9));
			}

		}
	}
	if (found == 0) {
		printf("%d is NOT FOUND\n", searchnum);
	}
	
}
